- name: deploy ec2 instances
  hosts: localhost
  connection: local
  gather_facts: False
  
  vars:
    ec2_access_key: {{ your_access_key }}
    ec2_secret_key: {{ your_secret_key }}
  
  tasks:
  tasks:
    - name: provision elb
      ec2_elb_lb:
        name: web-lb
        state: present
        region: 'us-east-1'
        zones:
          - us-east-1a
        listeners:
          - protocol: http
            load_balancer_port: 80
            instance_port: 80
      register: elb

    - name: provision ec2 instances
      ec2:
        aws_access_key: "{{ ec2_access_key }}"
        aws_secret_key: "{{ ec2_secret_key }}"
        region: 'us-east-1'
        key_name: master
        instance_type: t2.micro
        image: ami-97785bed
        instance_tags:
          Name: web
        count: 5
        count_tag:
          Name: web
        wait: true
      register: ec2_hosts

    - name: wait for host online
      wait_for: 
        host: "{{ item.public_ip }}"
        port: 22
        delay: 20
        timeout: 320
        state: started
      with_items: "{{ec2_hosts.instances}}"

    - name: add ec2 instances to elb
      ec2_elb:
        region: 'us-east-1'
        instance_id: "{{ item.id }}"
        ec2_elbs: web-lb
        state: present
      with_items: "{{ ec2_hosts.instances }}"
      ignore_errors: yes

    - name: add instances to inventory
      add_host: 
        hostname: "{{ item.public_ip }}"
        ansible_host: "{{ item.public_ip }}"
        ansible_port: 22
        groups: ec2
        dest: "./hosts"
      with_items: "{{ ec2_hosts.instances }}"

- name: wait for ssh
  hosts: ec2
  gather_facts: False

  vars:
    ansible_ssh_user: ec2-user
    ansible_ssh_private_key_file: {{ your_ssh_key }}

  tasks:
    - wait_for_connection:

- name: configure ec2 instances
  hosts: ec2
  
  vars:
    ansible_ssh_user: ec2-user
    ansible_ssh_private_key_file: ~/.aws/personal/master.pem

  tasks:
    - name: install nginx
      yum:
        name: nginx
        state: present
      become: true

    - name: start nginx
      service:
        name: nginx
        enabled: yes
        state: started
      become: true
